name: CI
on:
  push:
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
jobs:
  python:
    name: Python Type Checking
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Detect Python changes
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: python_changes
        with:
          files: |
            **/*.py
            pyproject.toml
            poetry.lock
      - name: Skip if no Python changes
        if:
          steps.python_changes.outputs.any_changed != 'true' && github.event_name
          != 'workflow_dispatch'
        run: |
          echo "âœ… No Python files changed, skipping Python quality checks"
          echo "ðŸ’¡ To force run checks, use workflow_dispatch trigger"
      - name: Setup Python Environment
        if:
          steps.python_changes.outputs.any_changed == 'true' || github.event_name
          == 'workflow_dispatch'
        uses: ./.github/actions/setup-python
        with:
          python-version: "3.13"
          install-groups: dev,types
          cache-suffix: ci
          generate-prisma: "true"
      - name: Run Pyright type checker
        if:
          steps.python_changes.outputs.any_changed == 'true' || github.event_name
          == 'workflow_dispatch'
        uses: jakebailey/pyright-action@b5d50e5cde6547546a5c4ac92e416a8c2c1a1dfe # v2
        with:
          annotate: errors
  markdown-lint:
    name: Markdown Linting
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Detect Markdown changes
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: markdown_changes
        with:
          files: "**/*.md"
      - name: Skip if no Markdown changes
        if: steps.markdown_changes.outputs.any_changed != 'true'
        run: |
          echo "âœ… No Markdown files changed, skipping Markdown linting"
      - name: Setup Node.js and markdownlint
        if: steps.markdown_changes.outputs.any_changed == 'true'
        uses: ./.github/actions/setup-nodejs-markdown
      - name: Run Markdown linting
        if: steps.markdown_changes.outputs.any_changed == 'true'
        run: |
          npx markdownlint \
            --disable MD013 MD033 MD041 \
            --ignore node_modules \
            --ignore .venv \
            --ignore .archive \
            "**/*.md"
  infrastructure:
    name: Infrastructure Linting
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        include:
          - type: Docker
            files: Dockerfile*,docker-compose*.yml
          - type: GitHub Actions
            files: .github/workflows/**
          - type: Shell Scripts
            files: "**/*.sh,**/*.bash,scripts/**"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Detect ${{ matrix.type }} changes
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: infra_changes
        with:
          files: ${{ matrix.files }}
      - name: Skip if no ${{ matrix.type }} changes
        if: steps.infra_changes.outputs.any_changed != 'true'
        run: |
          echo "âœ… No ${{ matrix.type }} files changed, skipping ${{ matrix.type }} linting"
      - name: Set up Docker Compose v2
        if:
          matrix.type == 'Docker' && steps.infra_changes.outputs.any_changed ==
          'true'
        run: |
          docker compose version
          echo "âœ… Docker Compose v2 is available"
      - name: Create test environment for Docker Compose validation
        if:
          matrix.type == 'Docker' && steps.infra_changes.outputs.any_changed ==
          'true'
        uses: ./.github/actions/create-test-env
        with:
          additional-vars: |
            PROD_DATABASE_URL=sqlite:///tmp/test.db
            PROD_BOT_TOKEN=test_token_for_ci_validation
      - name: Run Docker linting
        if:
          matrix.type == 'Docker' && steps.infra_changes.outputs.any_changed ==
          'true'
        run: |
          docker run --rm -i hadolint/hadolint hadolint \
            --ignore DL3008 \
            --ignore DL3009 \
            - < Dockerfile
          if command -v docker compose >/dev/null 2>&1; then
            echo "Using Docker Compose v2"
            docker compose -f docker-compose.yml config --quiet
            docker compose -f docker-compose.dev.yml config --quiet
          elif command -v docker-compose >/dev/null 2>&1; then
            echo "Using Docker Compose v1"
            docker-compose -f docker-compose.yml config --quiet
            docker-compose -f docker-compose.dev.yml config --quiet
          else
            echo "Neither docker compose nor docker-compose found"
            exit 1
      - name: Run GitHub Actions linting
        if:
          matrix.type == 'GitHub Actions' && steps.infra_changes.outputs.any_changed
          == 'true'
        uses: raven-actions/actionlint@3a24062651993d40fed1019b58ac6fbdfbf276cc # v2
        with:
          files: .github/workflows/*.yml
      - name: Run Shell linting
        if:
          matrix.type == 'Shell Scripts' && steps.infra_changes.outputs.any_changed
          == 'true'
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: ./scripts
