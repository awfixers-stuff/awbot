name: Setup Python Environment
description: Set up Python with Poetry, dependencies, and optional Prisma client generation
inputs:
  python-version:
    description: Python version to use
    required: false
    default: '3.13'
  install-groups:
    description: Poetry groups to install (comma-separated)
    required: false
    default: dev,types
  cache-suffix:
    description: Cache key suffix for differentiation
    required: false
    default: default
  generate-prisma:
    description: Whether to generate Prisma client
    required: false
    default: 'true'
runs:
  using: composite
  steps:
    - name: Install Poetry
      shell: bash
      run: pipx install poetry

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: poetry

    - name: Cache Poetry dependencies
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: |
          ~/.cache/pypoetry
          ~/.cache/pip
        key: poetry-${{ inputs.cache-suffix }}-${{ runner.os }}-${{ hashFiles('poetry.lock')
          }}
        restore-keys: |
          poetry-${{ inputs.cache-suffix }}-${{ runner.os }}-

    - name: Install dependencies
      shell: bash
      run: |
        if [[ "${{ inputs.install-groups }}" == "main" ]]; then
          poetry install --only=main --no-interaction --no-ansi
        else
          poetry install --with=${{ inputs.install-groups }} --no-interaction --no-ansi
        fi

    - name: Generate Prisma client
      if: ${{ inputs.generate-prisma == 'true' }}
      shell: bash
      run: poetry run prisma generate